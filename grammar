file_input: (NEWLINE | stmt)* ENDMARKER

# For normal assignments,
#additional restrictions enforced by the interpreter
stmt: simple_stmt | compound_stmt

compound_stmt: if_stmt | while_stmt
if_stmt: 'if' test ':' suite ('elif' test ':' suite)*
while_stmt: 'while' test ':' suite

suite: simple_stmt | NEWLINE INDENT stmt+ DEDENT


simple_stmt: small_stmt (';' small_stmt)* [';'] NEWLINE
small_stmt: (expr_stmt | print_stmt )
expr_stmt: test [('=' (test))]

print_stmt: 'print'  (
                        [ test (',' test)* [','] ]
                     | '>>' test [ (',' test)+ [','] ]
                     )

test: or_test
or_test: and_test ('or' and_test)*
and_test: not_test ('and' not_test)*
not_test: 'not' not_test | comparison

comparison: expr (comp_op expr)*
comp_op: '<'|'>'|'=='|'>='|'<='|'<>'|'!='
         |'in'|'not' 'in'|'is'|'is' 'not'


expr: xor_expr ('|' xor_expr)*
xor_expr: and_expr ('^' and_expr)*
and_expr: arith_expr ('&' arith_expr)*

arith_expr: term (('+'|'-') term)*
term: factor (('*'|'/'|'%'|'//') factor)*
factor: ('+'|'-') factor | power
power: atom  | atom '**' factor
atom: NAME | INTEGER | STRING | FLOAT)
